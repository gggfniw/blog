<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[java HelloWorld]]></title>
    <url>%2F2018%2F02%2F07%2Fhello-java%2F</url>
    <content type="text"><![CDATA[12345678910111213141516171819@Configurationpublic class BrowserSecurityBeanConfig &#123; @Autowired private SecurityProperties securityProperties; @Bean @ConditionalOnMissingBean(InvalidSessionStrategy.class) public InvalidSessionStrategy invalidSessionStrategy()&#123; return new ImoocInvalidSessionStrategy(securityProperties.getBrowser().getSession().getSessionInvalidUrl()); &#125; @Bean @ConditionalOnMissingBean(SessionInformationExpiredStrategy.class) public SessionInformationExpiredStrategy sessionInformationExpiredStrategy()&#123; return new ImoocExpiredSessionStrategy(securityProperties.getBrowser().getSession().getSessionInvalidUrl()); &#125; &#125;]]></content>
      <categories>
        <category>后端</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[centos7搭建salt master/minion环境！]]></title>
    <url>%2F2018%2F02%2F07%2Fsalt-install%2F</url>
    <content type="text"><![CDATA[本次搭建使用centos7.1，共搭建1台master，2台minion，ip分配如下： 服务器ip hostname 说明 192.168.32.140 salt-master master 192.168.32.141 salt-minion1 minion 192.168.32.142 salt-minion2 minion 服务器基础设置关闭防火墙12# systemctl stop firewalld# systemctl diasble firewalld 关闭selinux12# setenforce 0# vi /etc/selinux/config 将第6行修改为SELINUX=permissive1234567891011# This file controls the state of SELinux on the system.# SELINUX= can take one of these three values:# enforcing - SELinux security policy is enforced.# permissive - SELinux prints warnings instead of enforcing.# disabled - No SELinux policy is loaded.SELINUX=permissive# SELINUXTYPE= can take one of three two values:# targeted - Targeted processes are protected,# minimum - Modification of targeted policy. Only selected processes are protected.# mls - Multi Level Security protection.SELINUXTYPE=targeted 设置hostname1# hostnamectl set-hostname salt-master 修改host文件修改/etc/hosts文件为如下内容123192.168.32.140 salt-master192.168.32.141 salt-minion1192.168.32.142 salt-minion1 使用scp命令复制到其他2台服务器1# scp /etc/hosts root@salt-minion1:/etc/hosts 环境准备，依赖解决分别为三台机器添加阿里云epel源123# mv /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.backup# mv /etc/yum.repos.d/epel-testing.repo /etc/yum.repos.d/epel-testing.repo.backup# wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo 解决依赖关系，不然会报python依赖错误 1234# yum clean expire-cache# yum upgrade# yum -y install epel-release# yum install zeromq3 m2crypto python-crypto python-jinja2 python-msgpack python-yaml python-zmq -y 开始安装salt-master安装1# yum install -y salt-master salt-minion安装1# yum install -y salt-minion 配置&amp;启动master配置1# vim /etc/salt/master 修改如下：123456789#master消息发布端口 Default: 4505publish_port: 4505#工作线程数，应答和接受minion Default: 5worker_threads: 100#客户端与服务端通信的端口 Default: 4506ret_port: 4506#自动接受所有客户端auto_accept: True#启动salt-master 启动：1# systemctl start salt-master minion配置1# vim /etc/salt/minion 修改如下： 123456# master IP或域名master: salt-master# 客户端与服务端通信的端口。 Default: 4506master_port: 4506# id minion的唯一标示。Default: hostnameid: salt-minion1 启动：1# systemctl start salt-minion 测试查看master的key列表1234567[root@localhost ~]# salt-key -LAccepted Keys:（接受的key）salt-minion1salt-minion2Denied Keys:（否认的key）Unaccepted Keys:（未接受的key）Rejected Keys:（拒绝的key） salt-key常用参数说明：1234567-L 列出当前所有认证，包括Accepted Keys、Denied Keys、Unaccepted Keys、Rejected Keys-a 添加某个或某些个未接受(Unaccepted Keys)认证-A 添加所有未接受(Unaccepted Keys)认证-d 删除某个或某些个已接受(Accepted Keys)认证-D 删除所有已接受(Accepted Keys)认证-y 使用该参数可免去证书操作的交互，除非对minion端很信任，一般不建议使用-h 帮助 test.ping12345[root@localhost ~]# salt &apos;*&apos; test.pingsalt-minion1:Truesalt-minion2:True]]></content>
      <categories>
        <category>运维</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[搭建mesos集群！]]></title>
    <url>%2F2018%2F01%2F09%2Fmesos-install%2F</url>
    <content type="text"><![CDATA[本次搭建使用centos7.1，共搭建3台master，3台slave，ip分配如下： 服务器ip hostname 说明 192.168.32.131 docker1.nd.com master 192.168.32.132 docker2.nd.com master 192.168.32.133 docker3.nd.com master 192.168.32.134 docker4.nd.com slave 192.168.32.135 docker5.nd.com slave 192.168.32.136 docker6.nd.com slave 服务器基础设置关闭防火墙12# systemctl stop firewalld# systemctl diasble firewalld 关闭selinux12# setenforce 0# vi /etc/selinux/config 将第6行修改为SELINUX=permissive1234567891011# This file controls the state of SELinux on the system.# SELINUX= can take one of these three values:# enforcing - SELinux security policy is enforced.# permissive - SELinux prints warnings instead of enforcing.# disabled - No SELinux policy is loaded.SELINUX=permissive# SELINUXTYPE= can take one of three two values:# targeted - Targeted processes are protected,# minimum - Modification of targeted policy. Only selected processes are protected.# mls - Multi Level Security protection.SELINUXTYPE=targeted 设置hostname1# hostnamectl set-hostname salt-master 修改host文件修改/etc/hosts文件为如下内容123456192.168.32.131 docker1.nd.com192.168.32.132 docker2.nd.com192.168.32.133 docker3.nd.com192.168.32.134 docker4.nd.com192.168.32.135 docker5.nd.com192.168.32.136 docker6.nd.com 使用scp命令复制到其他5台服务器1# scp /etc/hosts root@docker2.nd.com:/etc/hosts 安装mesos、zookeeper包 1、分别在6台服务器上执行如下命令12# rpm -Uvh http://repos.mesosphere.io/el/7/noarch/RPMS/mesosphere-el-repo-7-1.noarch.rpm# rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-mesosphere 2、进入3台master服务器安装mesos、marathon和zookeeper1# yum install mesos marathon mesosphere-zookeeper -y 3、进入3台slave服务器安装mesos1# yum install mesos -y 配置mesos、zookeeper配置zookeeper1、修改/var/lib/zookeeper/myid文件，三台master服务器，分别设置为1、2、32、修改/etc/zookeeper/conf/zoo.cfg文件，在文件末尾添加以下配置123server.1=192.168.32.131:2888:3888server.2=192.168.32.132:2888:3888server.3=192.168.32.133:2888:3888 3、启动zookeeper服务1#systemctl start zookeeper 4、查看zookeeper服务是否已启动 1# systemctl is-active zookeeper 配置mesos-master1、在/etc/mesos 和 /etc/marathon/conf目录下，新建文件：zk，添加如下内容1zk://192.168.32.131:2181,192.168.32.132:2181,192.168.32.133:2181/mesos 2、设置/etc/mesos-master/quorum文件中quorum的值，这个值要大于master数量的1/2，我们这里设置为23、停用mesos-slave1# systemctl stop mesos-slave.service 1# systemctl disable mesos-slave.service 4、启动mesos-master marathon12# systemctl start mesos-master# marathon --master zk://192.168.32.131:2181,192.168.32.132:2181,192.168.32.133:2181/mesos 正常情况下此时已经可以通过http://docker1.nd.com:5050打开mesos页面 配置mesos-slave1、在/etc/mesos 和 /etc/marathon/conf目录下，新建文件：zk，添加如下内容1zk://192.168.32.131:2181,192.168.32.132:2181,192.168.32.133:2181/mesos 2、停用mesos-master12# systemctl stop mesos-master.service# systemctl disable mesos-master.service 3、启动mesos-slave1# systemctl start mesos-slave docker配置如需要在slave上运行docker，除docker自身安装配置外，还需要做如下设置1、指定使用docker容器化1# echo &apos;docker,mesos&apos; &gt; /etc/mesos-slave/containerizers 2、考虑到拉取容器镜像等的操作，适当增加timeout的时间1# echo &apos;5mins&apos; &gt; /etc/mesos-slave/executor_registration_timeout 3、重启mesos-slave以使上面配置生效1# systemctl restart mesos-slave 注意事项在测试环境中我们可以关闭防火墙，但在生产环境中，为了安全考虑，还是需要将防火墙开启此时应注意，master需要向agent的所有ip开放5050端口，所有agent需要向master开放5051端口并且为了用户可以访问mesos的前端页面，master需向用户ip开放5050端口，所有agent也需要向用户ip开放5051端口，否则会出现agent信息无法查看，task日志无法查看等问题]]></content>
      <categories>
        <category>后端</category>
      </categories>
  </entry>
</search>
